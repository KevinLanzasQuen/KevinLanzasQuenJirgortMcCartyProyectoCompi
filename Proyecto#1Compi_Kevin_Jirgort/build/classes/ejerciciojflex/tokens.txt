[TIPO_DATO,1], int
[IDENTIFICADOR,1], miFunc
[SEPARADOR,1], (
[TIPO_DATO,2], int
[IDENTIFICADOR,2], dif
[SEPARADOR,2], ,
[TIPO_DATO,3], char
[IDENTIFICADOR,3], otra
[SEPARADOR,3], )
[SEPARADOR,4], {

[TIPO_DATO,4], int
[IDENTIFICADOR,4], a
[FINAL_EXPRESION,1], #

[TIPO_DATO,5], string
[IDENTIFICADOR,5], str
[ASIGNACION,1], =
[STRING, 1], 'jirgort mccarty'
[FINAL_EXPRESION,2], #


[IDENTIFICADOR,6], miV
[ASIGNACION,2], =
[SEPARADOR,5], (
[IDENTIFICADOR,7], var
[OPERADOR, 1], +
[ENTERO, 1], 23
[SEPARADOR,6], )
[COMPARADOR,1], >
[ENTERO, 2], 45
[EXPRESION_LOGICA,1], &
[BOOLEAN,1], true
[EXPRESION_LOGICA,2], |
[IDENTIFICADOR,8], otra
[COMPARADOR,2], ==
[IDENTIFICADOR,9], otrFunc
[SEPARADOR,7], (
[SEPARADOR,8], )
[FINAL_EXPRESION,3], #

[ESTRUCTURA_CONTROL,1], switch
[SEPARADOR,9], (
[IDENTIFICADOR,10], miV
[SEPARADOR,10], )
[SEPARADOR,11], {

[ESTRUCTURA_CONTROL,2], case
[ENTERO, 3], 1
[SEPARADOR,12], :

[ESTRUCTURA_CONTROL,3], print
[SEPARADOR,13], (
[STRING, 2], '1'
[SEPARADOR,14], )
[FINAL_EXPRESION,4], #

[ESTRUCTURA_CONTROL,4], break
[FINAL_EXPRESION,5], #

[ESTRUCTURA_CONTROL,5], case
[ENTERO, 4], 2
[SEPARADOR,15], :

[IDENTIFICADOR,11], miV
[ASIGNACION,3], =
[IDENTIFICADOR,12], miV
[ENTERO, 5], -
[ENTERO, 6], -
[FINAL_EXPRESION,6], #

[ESTRUCTURA_CONTROL,6], default
[SEPARADOR,16], :

[IDENTIFICADOR,13], miV
[ASIGNACION,4], =
[IDENTIFICADOR,14], miV
[ENTERO, 7], -
[ENTERO, 8], -
[OPERADOR, 2], *
[IDENTIFICADOR,15], miV
[OPERADOR, 3], +
[ENTERO, 9], 1
[FINAL_EXPRESION,7], #

[SEPARADOR,17], }

[SEPARADOR,18], }

[ESTRUCTURA_CONTROL,7], while
[SEPARADOR,19], (
[EXPRESION_LOGICA,3], !
[SEPARADOR,20], (
[BOOLEAN,2], true
[COMPARADOR,3], ==
[SEPARADOR,21], (
[IDENTIFICADOR,16], asd
[COMPARADOR,4], >
[ENTERO, 10], 12
[SEPARADOR,22], )
[EXPRESION_LOGICA,4], &
[SEPARADOR,23], (
[SEPARADOR,24], (
[ENTERO, 11], 34
[OPERADOR, 4], +
[ENTERO, 12], 34
[SEPARADOR,25], )
[COMPARADOR,5], >
[ENTERO, 13], 12
[SEPARADOR,26], )
[SEPARADOR,27], )
[SEPARADOR,28], )
[SEPARADOR,29], {

[ESTRUCTURA_CONTROL,8], print
[SEPARADOR,30], (
[SEPARADOR,31], )
[FINAL_EXPRESION,8], #

[SEPARADOR,32], }

[IDENTIFICADOR,17], miV
[ASIGNACION,5], =
[ENTERO, 14], 45
[EXPRESION_LOGICA,5], &
[IDENTIFICADOR,18], var
[FINAL_EXPRESION,9], #

[SEPARADOR,33], }

[TIPO_DATO,1], int
[IDENTIFICADOR,1], miFunc
[SEPARADOR,1], (
[TIPO_DATO,2], int
[IDENTIFICADOR,2], dif
[SEPARADOR,2], ,
[TIPO_DATO,3], char
[IDENTIFICADOR,3], otra
[SEPARADOR,3], )
[SEPARADOR,4], {

[TIPO_DATO,4], int
[IDENTIFICADOR,4], a
[FINAL_EXPRESION,1], #

[TIPO_DATO,5], string
[IDENTIFICADOR,5], str
[ASIGNACION,1], =
[STRING, 1], 'jirgort mccarty'
[FINAL_EXPRESION,2], #


[IDENTIFICADOR,6], miV
[ASIGNACION,2], =
[SEPARADOR,5], (
[IDENTIFICADOR,7], var
[OPERADOR, 1], +
[ENTERO, 1], 23
[SEPARADOR,6], )
[COMPARADOR,1], >
[ENTERO, 2], 45
[EXPRESION_LOGICA,1], &
[BOOLEAN,1], true
[EXPRESION_LOGICA,2], |
[IDENTIFICADOR,8], otra
[COMPARADOR,2], ==
[IDENTIFICADOR,9], otrFunc
[SEPARADOR,7], (
[SEPARADOR,8], )
[FINAL_EXPRESION,3], #

[ESTRUCTURA_CONTROL,1], switch
[SEPARADOR,9], (
[IDENTIFICADOR,10], miV
[SEPARADOR,10], )
[SEPARADOR,11], {

[ESTRUCTURA_CONTROL,2], case
[ENTERO, 3], 1
[SEPARADOR,12], :

[ESTRUCTURA_CONTROL,3], print
[SEPARADOR,13], (
[STRING, 2], '1'
[SEPARADOR,14], )
[FINAL_EXPRESION,4], #

[ESTRUCTURA_CONTROL,4], break
[FINAL_EXPRESION,5], #

[ESTRUCTURA_CONTROL,5], case
[ENTERO, 4], 2
[SEPARADOR,15], :

[IDENTIFICADOR,11], miV
[ASIGNACION,3], =
[IDENTIFICADOR,12], miV
[ENTERO, 5], -
[ENTERO, 6], -
[FINAL_EXPRESION,6], #

[ESTRUCTURA_CONTROL,6], default
[SEPARADOR,16], :

[IDENTIFICADOR,13], miV
[ASIGNACION,4], =
[IDENTIFICADOR,14], miV
[ENTERO, 7], -
[ENTERO, 8], -
[OPERADOR, 2], *
[IDENTIFICADOR,15], miV
[OPERADOR, 3], +
[ENTERO, 9], 1
[FINAL_EXPRESION,7], #

[SEPARADOR,17], }

[SEPARADOR,18], }

[ESTRUCTURA_CONTROL,7], while
[SEPARADOR,19], (
[EXPRESION_LOGICA,3], !
[SEPARADOR,20], (
[BOOLEAN,2], true
[COMPARADOR,3], ==
[SEPARADOR,21], (
[IDENTIFICADOR,16], asd
[COMPARADOR,4], >
[ENTERO, 10], 12
[SEPARADOR,22], )
[EXPRESION_LOGICA,4], &
[SEPARADOR,23], (
[SEPARADOR,24], (
[ENTERO, 11], 34
[OPERADOR, 4], +
[ENTERO, 12], 34
[SEPARADOR,25], )
[COMPARADOR,5], >
[ENTERO, 13], 12
[SEPARADOR,26], )
[SEPARADOR,27], )
[SEPARADOR,28], )
[SEPARADOR,29], {

[ESTRUCTURA_CONTROL,8], print
[SEPARADOR,30], (
[SEPARADOR,31], )
[FINAL_EXPRESION,8], #

[SEPARADOR,32], }

[IDENTIFICADOR,17], miV
[ASIGNACION,5], =
[ENTERO, 14], 45
[EXPRESION_LOGICA,5], &
[IDENTIFICADOR,18], var
[FINAL_EXPRESION,9], #

[SEPARADOR,33], }

[TIPO_DATO,1], int
[IDENTIFICADOR,1], miFunc
[SEPARADOR,1], (
[TIPO_DATO,2], int
[IDENTIFICADOR,2], dif
[SEPARADOR,2], ,
[TIPO_DATO,3], char
[IDENTIFICADOR,3], otra
[SEPARADOR,3], )
[SEPARADOR,4], {

[TIPO_DATO,4], int
[IDENTIFICADOR,4], a
[FINAL_EXPRESION,1], #

[TIPO_DATO,5], string
[IDENTIFICADOR,5], str
[ASIGNACION,1], =
[STRING, 1], 'jirgort mccarty'
[FINAL_EXPRESION,2], #


[IDENTIFICADOR,6], miV
[ASIGNACION,2], =
[SEPARADOR,5], (
[IDENTIFICADOR,7], var
[OPERADOR, 1], +
[ENTERO, 1], 23
[SEPARADOR,6], )
[COMPARADOR,1], >
[ENTERO, 2], 45
[EXPRESION_LOGICA,1], &
[BOOLEAN,1], true
[EXPRESION_LOGICA,2], |
[IDENTIFICADOR,8], otra
[COMPARADOR,2], ==
[IDENTIFICADOR,9], otrFunc
[SEPARADOR,7], (
[SEPARADOR,8], )
[FINAL_EXPRESION,3], #

[ESTRUCTURA_CONTROL,1], switch
[SEPARADOR,9], (
[IDENTIFICADOR,10], miV
[SEPARADOR,10], )
[SEPARADOR,11], {

[ESTRUCTURA_CONTROL,2], case
[ENTERO, 3], 1
[SEPARADOR,12], :

[ESTRUCTURA_CONTROL,3], print
[SEPARADOR,13], (
[STRING, 2], '1'
[SEPARADOR,14], )
[FINAL_EXPRESION,4], #

[ESTRUCTURA_CONTROL,4], break
[FINAL_EXPRESION,5], #

[ESTRUCTURA_CONTROL,5], case
[ENTERO, 4], 2
[SEPARADOR,15], :

[IDENTIFICADOR,11], miV
[ASIGNACION,3], =
[IDENTIFICADOR,12], miV
[ENTERO, 5], -
[ENTERO, 6], -
[FINAL_EXPRESION,6], #

[ESTRUCTURA_CONTROL,6], default
[SEPARADOR,16], :

[IDENTIFICADOR,13], miV
[ASIGNACION,4], =
[IDENTIFICADOR,14], miV
[ENTERO, 7], -
[ENTERO, 8], -
[OPERADOR, 2], *
[IDENTIFICADOR,15], miV
[OPERADOR, 3], +
[ENTERO, 9], 1
[FINAL_EXPRESION,7], #

[SEPARADOR,17], }

[SEPARADOR,18], }

[ESTRUCTURA_CONTROL,7], while
[SEPARADOR,19], (
[EXPRESION_LOGICA,3], !
[SEPARADOR,20], (
[BOOLEAN,2], true
[COMPARADOR,3], ==
[SEPARADOR,21], (
[IDENTIFICADOR,16], asd
[COMPARADOR,4], >
[ENTERO, 10], 12
[SEPARADOR,22], )
[EXPRESION_LOGICA,4], &
[SEPARADOR,23], (
[SEPARADOR,24], (
[ENTERO, 11], 34
[OPERADOR, 4], +
[ENTERO, 12], 34
[SEPARADOR,25], )
[COMPARADOR,5], >
[ENTERO, 13], 12
[SEPARADOR,26], )
[SEPARADOR,27], )
[SEPARADOR,28], )
[SEPARADOR,29], {

[ESTRUCTURA_CONTROL,8], print
[SEPARADOR,30], (
[SEPARADOR,31], )
[FINAL_EXPRESION,8], #

[SEPARADOR,32], }

[IDENTIFICADOR,17], miV
[ASIGNACION,5], =
[ENTERO, 14], 45
[EXPRESION_LOGICA,5], &
[IDENTIFICADOR,18], var
[FINAL_EXPRESION,9], #

[SEPARADOR,33], }

